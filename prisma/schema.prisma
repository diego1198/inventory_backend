// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      UserRole @default(CASHIER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sales Sale[]

  @@map("users")
}

model Product {
  id          String          @id @default(uuid())
  name        String
  description String
  price       Decimal         @db.Decimal(10, 2)
  stock       Int
  category    ProductCategory @default(OTHER)
  isActive    Boolean         @default(true)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  saleItems SaleItem[]

  @@map("products")
}

model Sale {
  id            String     @id @default(uuid())
  invoiceNumber String     @unique
  subtotal     Decimal    @db.Decimal(10, 2)
  tax          Decimal    @db.Decimal(10, 2)
  total        Decimal    @db.Decimal(10, 2)
  status       SaleStatus @default(PENDING)
  notes        String?
  userId       String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  user  User       @relation(fields: [userId], references: [id])
  items SaleItem[]

  @@map("sales")
}

model SaleItem {
  id        String  @id @default(uuid())
  quantity  Int
  unitPrice Decimal @db.Decimal(10, 2)
  total     Decimal @db.Decimal(10, 2)
  saleId    String
  productId String

  sale   Sale    @relation(fields: [saleId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("sale_items")
}

enum UserRole {
  ADMIN
  CASHIER
}

enum ProductCategory {
  ELECTRONICS
  CLOTHING
  FOOD
  BOOKS
  OTHER
}

enum SaleStatus {
  PENDING
  COMPLETED
  CANCELLED
}
